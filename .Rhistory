states_year %>%
filter(FatalityType == "Pickup Truck Fatalities") %>%
group_by(State) %>%
ggplot(aes(x = year, y = count, fill = State)) +
geom_col() +
ggtitle("Pickup Truck Fatalities by Year")
# Other Nonoccupant Fatalities by State
temp_states %>%
filter(FatalityType == "Pickup Truck Fatalities") %>%
mutate(total_fatalities = sum(count), .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities)) +
ggtitle("Pickup Truck Fatalities by State")
# Van Fatalities (Conor)
# Other Light Truck Fatalities (Conor)
# Motorcycle Fatalities (Conor)
# Conor
# Pickup Truck Fatalities (Conor)
states_year %>%
filter(FatalityType == "Pickup Truck Fatalities") %>%
group_by(State) %>%
ggplot(aes(x = year, y = count, fill = State)) +
geom_line() +
ggtitle("Pickup Truck Fatalities by Year")
# Other Nonoccupant Fatalities by State
temp_states %>%
filter(FatalityType == "Pickup Truck Fatalities") %>%
mutate(total_fatalities = sum(count), .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities)) +
ggtitle("Pickup Truck Fatalities by State")
# Van Fatalities (Conor)
# Other Light Truck Fatalities (Conor)
# Motorcycle Fatalities (Conor)
# Conor
# Pickup Truck Fatalities (Conor)
states_year %>%
filter(FatalityType == "Pickup Truck Fatalities") %>%
group_by(State) %>%
ggplot(aes(x = year, y = count, fill = State)) +
geom_col() +
ggtitle("Pickup Truck Fatalities by Year")
# Other Nonoccupant Fatalities by State
temp_states %>%
filter(FatalityType == "Pickup Truck Fatalities") %>%
mutate(total_fatalities = sum(count), .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities)) +
ggtitle("Pickup Truck Fatalities by State")
# Van Fatalities (Conor)
# Other Light Truck Fatalities (Conor)
# Motorcycle Fatalities (Conor)
# Conor
# Pickup Truck Fatalities by Year (Conor)
states_year %>%
filter(FatalityType == "Pickup Truck Fatalities") %>%
ggplot(aes(x = year, y = count, fill = State)) +
geom_col() +
ggtitle("Pickup Truck Fatalities by Year")
# Pickup Truck Fatalities by State (Conor)
temp_states %>%
filter(FatalityType == "Pickup Truck Fatalities") %>%
mutate(total_fatalities = sum(count), .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities)) +
ggtitle("Pickup Truck Fatalities by State")
# Van Fatalities by Year (Conor)
states_year %>%
filter(FatalityType == "Van Fatalities") %>%
ggplot(aes(x = year, y = count, fill = State)) +
geom_col() +
ggtitle("Van Fatalities by Year")
# Van Fatalities by State (Conor)
temp_states %>%
filter(FatalityType == "Van Fatalities") %>%
mutate(total_fatalities = sum(count), .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities)) +
ggtitle("Van Fatalities by State")
# Other Light Truck Fatalities (Conor)
# Motorcycle Fatalities (Conor)
# Conor
# Pickup Truck Fatalities by Year (Conor)
states_year %>%
filter(FatalityType == "Pickup Truck Fatalities") %>%
ggplot(aes(x = year, y = count, fill = State)) +
geom_col() +
ggtitle("Pickup Truck Fatalities by Year")
# Pickup Truck Fatalities by State (Conor)
temp_states %>%
filter(FatalityType == "Pickup Truck Fatalities") %>%
mutate(total_fatalities = sum(count), .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities)) +
ggtitle("Pickup Truck Fatalities by State")
# Van Fatalities by Year (Conor)
states_year %>%
filter(FatalityType == "Van Fatalities") %>%
ggplot(aes(x = year, y = count, fill = State)) +
geom_col() +
ggtitle("Van Fatalities by Year")
# Van Fatalities by State (Conor)
temp_states %>%
filter(FatalityType == "Van Fatalities") %>%
mutate(total_fatalities = sum(count), .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities)) +
ggtitle("Van Fatalities by State")
# Other Light Truck Fatalities by Year (Conor)
states_year %>%
filter(FatalityType == "Other Light Truck Fatalities") %>%
ggplot(aes(x = year, y = count, fill = State)) +
geom_col() +
ggtitle("Other Light Truck Fatalities by Year")
# Other Light Truck Fatalities by State (Conor)
temp_states %>%
filter(FatalityType == "Other Light Truck Fatalities") %>%
mutate(total_fatalities = sum(count), .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities)) +
ggtitle("Other Light Truck Fatalities by State")
# Motorcycle Fatalities by Year (Conor)
states_year %>%
filter(FatalityType == "Motorcycle Fatalities") %>%
ggplot(aes(x = year, y = count, fill = State)) +
geom_col() +
ggtitle("Motorcycle Fatalities by Year")
# Motorcycle Fatalities by State (Conor)
temp_states %>%
filter(FatalityType == "Motorcycle Fatalities") %>%
mutate(total_fatalities = sum(count), .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities)) +
ggtitle("Motorcycle Fatalities by State")
git
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
# csv being used
hw <- read.csv("hwFatal.csv")
head(hw)
# information about data set
summary(hw)
# Cleaning data
## Fixing empty column name for Fatality Type, and making year column names start with a character
hw <-  read.csv("hwFatal.csv", col.names = c("State","FatalityType","Y2010","Y2011","Y2012","Y2013","Y2014","Y2015","Y2016","Y2017","Y2018","Y2019","Y2020","Y2021"))
## Creating a seocnd dataset where there the whole country collectively is not included (just states and territories individually)
states <- hw %>% filter(State != "United States")
states$State <- tolower(states$State) # making joining with the map easier later on
head(states)
## Parse the fatality by year as a number, and not a character.
states <- states %>%
mutate (
Y2010 = parse_number(Y2010),
Y2011 = parse_number(Y2011),
Y2012 = parse_number(Y2012),
Y2013 = parse_number(Y2013),
Y2014 = parse_number(Y2014),
Y2015 = parse_number(Y2015),
Y2016 = parse_number(Y2016),
Y2017 = parse_number(Y2017),
Y2018 = parse_number(Y2018),
Y2019 = parse_number(Y2019),
Y2020 = parse_number(Y2020),
Y2021 = parse_number(Y2021),
)
# information about data set
summary(states)
# Aadhi
# Initializing stuff
state_map <- map_data("state")
colnames(state_map)[5] <- "State"   # making join easier
states_year <- states %>%        # Organizing by year and the count a numeric to plot
pivot_longer(cols = Y2010:Y2021,
names_to = "year",
values_to = "count") %>%
mutate(`count` = as.numeric(`count`))
temp_states <- left_join(state_map, states_year, by = "State") # making df to plot
# Pedestrian Fatalities by Year
states_year %>%
filter(FatalityType == "Pedestrian Fatalities") %>%
ggplot(aes(x = year, y = count, fill = State)) +
geom_col() +
ggtitle("Pedestrian Fatalities by Year")
# Pedestrian Fatalities by State
temp_states %>%
filter(FatalityType == "Pedestrian Fatalities") %>%
mutate(total_fatalities = sum(count), .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities)) +
ggtitle("Pedestrian Fatalities by State")
# Other Nonoccupant Fatalities by Year
states_year %>%
filter(FatalityType == "Other Nonoccupant Fatalities") %>%
ggplot(aes(x = year, y = count, fill = State)) +
geom_col() +
ggtitle("Other Nonoccupant Fatalities by Year")
# Other Nonoccupant Fatalities by State
temp_states %>%
filter(FatalityType == "Other Nonoccupant Fatalities") %>%
mutate(total_fatalities = sum(count), .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities)) +
ggtitle("Other Nonoccupant Fatalities by State")
# Other Vehicle Fatalities by Year
states_year %>%
filter(FatalityType == "Other Vehicle Fatalities") %>%
ggplot(aes(x = year, y = count, fill = State)) +
geom_col() +
ggtitle("Other Vehicle Fatalities by Year")
# Other Vehicle Fatalities by State
temp_states %>%
filter(FatalityType == "Other Vehicle Fatalities") %>%
mutate(total_fatalities = sum(count), .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities)) +
ggtitle("Other Vehicle Fatalities by State")
temp_states <- left_join(state_map, states_year, by = "State")
temp_states %>%
filter(FatalityType == "Pedestrian Fatalities") %>%
mutate(total_fatalities = sum(count), .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities))
# Conor
# Pickup Truck Fatalities by Year (Conor)
states_year %>%
filter(FatalityType == "Pickup Truck Fatalities") %>%
ggplot(aes(x = year, y = count)) +
geom_col() +
ggtitle("Pickup Truck Fatalities by Year")
# Pickup Truck Fatalities by State (Conor)
temp_states %>%
filter(FatalityType == "Pickup Truck Fatalities") %>%
mutate(total_fatalities = sum(count), .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities)) +
ggtitle("Pickup Truck Fatalities by State")
# Van Fatalities by Year (Conor)
states_year %>%
filter(FatalityType == "Van Fatalities") %>%
ggplot(aes(x = year, y = count)) +
geom_col() +
ggtitle("Van Fatalities by Year")
# Van Fatalities by State (Conor)
temp_states %>%
filter(FatalityType == "Van Fatalities") %>%
mutate(total_fatalities = sum(count), .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities)) +
ggtitle("Van Fatalities by State")
# Other Light Truck Fatalities by Year (Conor)
states_year %>%
filter(FatalityType == "Other Light Truck Fatalities") %>%
ggplot(aes(x = year, y = count)) +
geom_col() +
ggtitle("Other Light Truck Fatalities by Year")
# Other Light Truck Fatalities by State (Conor)
temp_states %>%
filter(FatalityType == "Other Light Truck Fatalities") %>%
mutate(total_fatalities = sum(count), .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities)) +
ggtitle("Other Light Truck Fatalities by State")
# Motorcycle Fatalities by Year (Conor)
states_year %>%
filter(FatalityType == "Motorcycle Fatalities") %>%
ggplot(aes(x = year, y = count)) +
geom_col() +
ggtitle("Motorcycle Fatalities by Year")
# Motorcycle Fatalities by State (Conor)
temp_states %>%
filter(FatalityType == "Motorcycle Fatalities") %>%
mutate(total_fatalities = sum(count), .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities)) +
ggtitle("Motorcycle Fatalities by State")
# Daniel
# Bus Fatalities by year per state
states_year %>%
filter(FatalityType == "Bus Fatalities") %>%
ggplot(aes(x = year, y = count, fill = State)) +
geom_col(space=1) +
ggtitle("Bus Fatalities by Year")
temp_states %>%
filter(FatalityType == "Bus Fatalities") %>%
mutate(total_fatalities = sum(count), .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = count)) +
ggtitle("Bus Fatalities by State")
# Large Truck Fatalities by year per state
states_year %>%
filter(FatalityType == "Large Truck Fatalities") %>%
ggplot(aes(x = year, y = count, fill = State)) +
geom_col(space=1) +
ggtitle("Large Truck Fatalities by Year")
temp_states %>%
filter(FatalityType == "Large Truck Fatalities") %>%
mutate(total_fatalities = sum(count), .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = count)) +
ggtitle("Large Truck Fatalities by State")
# Pedalcyclist Fatalities by year per state
states_year %>%
filter(FatalityType == "Pedalcyclist Fatalities") %>%
ggplot(aes(x = year, y = count, fill = State)) +
geom_col(space=1) +
ggtitle("Pedalcyclist Fatalities by Year")
temp_states %>%
filter(FatalityType == "Pedalcyclist Fatalities") %>%
mutate(total_fatalities = sum(count), .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = count)) +
ggtitle("Pedalcyclist Fatalities by State")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
# Datasets being used
hw <- read.csv("hwFatal.csv")
head(hw)
# information about data set
summary(hw)
statePop <- read.csv("state_populations_2010-2021.csv", col.names = c("State", "Y2010","Y2011","Y2012","Y2013","Y2014","Y2015","Y2016","Y2017","Y2018","Y2019","Y2020","Y2021"))
head(hw)
# information about dataset
summary(statePop)
# Cleaning data
## Fixing empty column name for Fatality Type, and making year column names start with a character
hw <-  read.csv("hwFatal.csv", col.names = c("State","FatalityType","Y2010","Y2011","Y2012","Y2013","Y2014","Y2015","Y2016","Y2017","Y2018","Y2019","Y2020","Y2021"))
## Creating a seocnd dataset where there the whole country collectively is not included (just states and territories individually)
states <- hw %>% filter(State != "United States")
states$State <- tolower(states$State) # making joining with the map easier later on
head(states)
## Parse the fatality by year as a number, and not a character.
states <- states %>%
mutate (
Y2010 = parse_number(Y2010),
Y2011 = parse_number(Y2011),
Y2012 = parse_number(Y2012),
Y2013 = parse_number(Y2013),
Y2014 = parse_number(Y2014),
Y2015 = parse_number(Y2015),
Y2016 = parse_number(Y2016),
Y2017 = parse_number(Y2017),
Y2018 = parse_number(Y2018),
Y2019 = parse_number(Y2019),
Y2020 = parse_number(Y2020),
Y2021 = parse_number(Y2021),
)
# information about data set
summary(states)
# Aadhi
# Initializing stuff
state_map <- map_data("state")
colnames(state_map)[5] <- "State"   # making join easier
states_year <- states %>%        # Organizing by year and the count a numeric to plot
pivot_longer(cols = Y2010:Y2021,
names_to = "year",
values_to = "count") %>%
mutate(`count` = as.numeric(`count`))
states_pops <- statePop %>%        # Organizing by year and the count a numeric to plot
pivot_longer(cols = Y2010:Y2021,
names_to = "year",
values_to = "population") %>%
mutate(`population` = as.numeric(`population`))
temp_states <- left_join(state_map, states_year, by = "State") # making df to plot
temp_states <- left_join(temp_states, s)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
# Datasets being used
hw <- read.csv("hwFatal.csv")
head(hw)
# information about data set
summary(hw)
statePop <- read.csv("state_populations_2010-2021.csv", col.names = c("State", "Y2010","Y2011","Y2012","Y2013","Y2014","Y2015","Y2016","Y2017","Y2018","Y2019","Y2020","Y2021"))
head(hw)
# information about dataset
summary(statePop)
# Datasets being used
hw <- read.csv("hwFatal.csv")
head(hw)
# information about data set
summary(hw)
statePop <- read.csv("state_populations_2010-2021.csv", col.names = c("State", "Y2010","Y2011","Y2012","Y2013","Y2014","Y2015","Y2016","Y2017","Y2018","Y2019","Y2020","Y2021"))
head(hw)
# information about dataset
summary(statePop)
# Datasets being used
hw <- read.csv("hwFatal.csv")
head(hw)
# information about data set
summary(hw)
statePop <- read.csv("state_populations_2010-2021.csv", col.names = c("State", "Y2010","Y2011","Y2012","Y2013","Y2014","Y2015","Y2016","Y2017","Y2018","Y2019","Y2020","Y2021"))
head(hw)
# information about dataset
summary(statePop)
# Cleaning data
## Fixing empty column name for Fatality Type, and making year column names start with a character
hw <-  read.csv("hwFatal.csv", col.names = c("State","FatalityType","Y2010","Y2011","Y2012","Y2013","Y2014","Y2015","Y2016","Y2017","Y2018","Y2019","Y2020","Y2021"))
## Creating a seocnd dataset where there the whole country collectively is not included (just states and territories individually)
states <- hw %>% filter(State != "United States")
states$State <- tolower(states$State) # making joining with the map easier later on
head(states)
## Parse the fatality by year as a number, and not a character.
states <- states %>%
mutate (
Y2010 = parse_number(Y2010),
Y2011 = parse_number(Y2011),
Y2012 = parse_number(Y2012),
Y2013 = parse_number(Y2013),
Y2014 = parse_number(Y2014),
Y2015 = parse_number(Y2015),
Y2016 = parse_number(Y2016),
Y2017 = parse_number(Y2017),
Y2018 = parse_number(Y2018),
Y2019 = parse_number(Y2019),
Y2020 = parse_number(Y2020),
Y2021 = parse_number(Y2021),
)
# information about data set
summary(states)
# Aadhi
# Initializing stuff
state_map <- map_data("state")
colnames(state_map)[5] <- "State"   # making join easier
states_year <- states %>%        # Organizing by year and the count a numeric to plot
pivot_longer(cols = Y2010:Y2021,
names_to = "year",
values_to = "count") %>%
mutate(`count` = as.numeric(`count`))
states_pops <- statePop %>%        # Organizing by year and the count a numeric to plot
pivot_longer(cols = Y2010:Y2021,
names_to = "year",
values_to = "population") %>%
mutate(`population` = as.numeric(`population`))
temp_states <- left_join(state_map, states_year, by = "State") # making df to plot
temp_states <- left_join(temp_states, states_pops, by = "State")
# Pedestrian Fatalities by Year
states_year %>%
filter(FatalityType == "Pedestrian Fatalities") %>%
ggplot(aes(x = year, y = count, fill = State)) +
geom_col() +
ggtitle("Pedestrian Fatalities by Year")
# Pedestrian Fatalities by State
temp_states %>%
filter(FatalityType == "Pedestrian Fatalities") %>%
mutate(total_fatalities = sum(count), .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities)) +
ggtitle("Pedestrian Fatalities by State")
# Other Nonoccupant Fatalities by Year
states_year %>%
filter(FatalityType == "Other Nonoccupant Fatalities") %>%
ggplot(aes(x = year, y = count, fill = State)) +
geom_col() +
ggtitle("Other Nonoccupant Fatalities by Year")
# Other Nonoccupant Fatalities by State
temp_states %>%
filter(FatalityType == "Other Nonoccupant Fatalities") %>%
mutate(total_fatalities = sum(count), .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities)) +
ggtitle("Other Nonoccupant Fatalities by State")
# Other Vehicle Fatalities by Year
states_year %>%
filter(FatalityType == "Other Vehicle Fatalities") %>%
ggplot(aes(x = year, y = count, fill = State)) +
geom_col() +
ggtitle("Other Vehicle Fatalities by Year")
# Other Vehicle Fatalities by State
temp_states %>%
filter(FatalityType == "Other Vehicle Fatalities") %>%
mutate(total_fatalities = sum(count), .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities)) +
ggtitle("Other Vehicle Fatalities by State")
# Roba
## Construct map of fatalality by state
states$region <- tolower(states$State)
state_map2 <- map_data("state")
state_map2 <- states %>% left_join(state_map2, by="region")
head(state_map2)
state_map2 %>% filter(FatalityType == "Highway Fatalities") %>%
ggplot(aes(x = long, y = lat,
fill=Y2010+Y2011+Y2012+Y2013+Y2014+Y2015+Y2016+Y2017+Y2018+Y2019+Y2020+Y2021)) +
geom_polygon(aes(group=group)) +
scale_fill_continuous(name = "Death Count (2010 - 2021)") +
ggtitle("Highway Fatalities by State")
state_map2 %>% filter(FatalityType == "Highway Fatalities") %>%
ggplot(aes(x = long, y = lat,
fill=(Y2010+Y2011+Y2012+Y2013+Y2014+Y2015+Y2016+Y2017+Y2018+Y2019+Y2020+Y2021)/popul)) +
geom_polygon(aes(group=group)) +
scale_fill_continuous(name = "Death Count (2010 - 2021)") +
ggtitle("Highway Fatalities by State Population Density")
# Roba
## Construct map of fatalality by state
states$region <- tolower(states$State)
state_map2 <- map_data("state")
state_map2 <- states %>% left_join(state_map2, by="region")
head(state_map2)
state_map2 %>% filter(FatalityType == "Highway Fatalities") %>%
ggplot(aes(x = long, y = lat,
fill=Y2010+Y2011+Y2012+Y2013+Y2014+Y2015+Y2016+Y2017+Y2018+Y2019+Y2020+Y2021)) +
geom_polygon(aes(group=group)) +
scale_fill_continuous(name = "Death Count (2010 - 2021)") +
ggtitle("Highway Fatalities by State")
state_map2 %>% filter(FatalityType == "Highway Fatalities") %>%
ggplot(aes(x = long, y = lat,
fill=(Y2010+Y2011+Y2012+Y2013+Y2014+Y2015+Y2016+Y2017+Y2018+Y2019+Y2020+Y2021)/population)) +
geom_polygon(aes(group=group)) +
scale_fill_continuous(name = "Death Count (2010 - 2021)") +
ggtitle("Highway Fatalities by State Population Density")
