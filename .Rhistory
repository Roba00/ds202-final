knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
# Bus Fatalities
temp_states %>%
filter(FatalityType == "Bus Fatalities") %>%
mutate(total_fatalities = sum(count), .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities))
?FatalityType
??FatalityType
However, according to the National Highway Traffic Safety Administration,
Megan McArdle, a columnist the Washington Post, indicated that this may be due to an
Light Truck fatalities seems to be an exception to these sudden spike of fatal accidents
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidyverse)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
```{r, echo=FALSE, warnings=FALSE}
# Datasets being used
hw <- read.csv("hw_fatal.csv")
head(hw)
# information about data set
summary(hw)
statePop <- read.csv("state_populations_2010-2021.csv", col.names = c("State", "Y2010","Y2011","Y2012","Y2013","Y2014","Y2015","Y2016","Y2017","Y2018","Y2019","Y2020","Y2021"))
head(hw)
head(statePop)
temp_states <- left_join(state_map, states_year, by = "State") # making df to plot
temp_states <- left_join(temp_states, states_pops, by = "State")
```{r setup, include=FALSE, echo=FALSE, warnings=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
```{r, echo=FALSE, warnings=FALSE}
# Datasets being used
hw <- read.csv("hw_fatal.csv")
head(hw)
# information about data set
summary(hw)
statePop <- read.csv("state_populations_2010-2021.csv", col.names = c("State", "Y2010","Y2011","Y2012","Y2013","Y2014","Y2015","Y2016","Y2017","Y2018","Y2019","Y2020","Y2021"))
head(hw)
# information about dataset
summary(statePop)
# information about dataset
summary(statePop)
```{r, echo=FALSE, warnings=FALSE}
## Fixing empty column name for Fatality Type, and making year column names start with a character
hw <-  read.csv("hw_fatal.csv", col.names = c("State","FatalityType","Y2010","Y2011","Y2012","Y2013","Y2014","Y2015","Y2016","Y2017","Y2018","Y2019","Y2020","Y2021","TotalFatalities"))
## Creating a seocnd dataset where there the whole country collectively is not included (just states and territories individually)
states <- hw %>% filter(State != "United States")
states$State <- tolower(states$State) # making joining with the map easier later on
head(states)
head(states)
## Fixing empty column name for Fatality Type, and making year column names start with a character
hw <-  read.csv("hw_fatal.csv", col.names = c("State","FatalityType","Y2010","Y2011","Y2012","Y2013","Y2014","Y2015","Y2016","Y2017","Y2018","Y2019","Y2020","Y2021","TotalFatalities"))
## Creating a seocnd dataset where there the whole country collectively is not included (just states and territories individually)
states <- hw %>% filter(State != "United States")
states$State <- tolower(states$State) # making joining with the map easier later on
head(states)
# information about dataset
summary(statePop)
# information about dataset
summary(statePop)
```{r, echo=FALSE, warnings=FALSE}
## Fixing empty column name for Fatality Type, and making year column names start with a character
hw <-  read.csv("hw_fatal.csv", col.names = c("State","FatalityType","Y2010","Y2011","Y2012","Y2013","Y2014","Y2015","Y2016","Y2017","Y2018","Y2019","Y2020","Y2021","TotalFatalities"))
## Creating a seocnd dataset where there the whole country collectively is not included (just states and territories individually)
states <- hw %>% filter(State != "United States")
states$State <- tolower(states$State) # making joining with the map easier later on
head(states)
# Initializing stuff
state_map <- map_data("state")
colnames(state_map)[5] <- "State"   # making join easier
states_year <- states %>%        # Organizing by year and the count a numeric to plot
pivot_longer(cols = Y2010:Y2021,
names_to = "year",
values_to = "count") %>%
mutate(`count` = as.numeric(`count`))
colnames(state_map)[5] <- "State"   # making join easier
states_year <- states %>%        # Organizing by year and the count a numeric to plot
pivot_longer(cols = Y2010:Y2021,
names_to = "year",
values_to = "count") %>%
mutate(`count` = as.numeric(`count`))
states_pops <- statePop %>%        # Organizing by year and the count a numeric to plot
pivot_longer(cols = Y2010:Y2021,
names_to = "year",
values_to = "population") %>%
mutate(`population` = as.numeric(`population`))
temp_states <- left_join(state_map, states_year, by = "State") # making df to plot
temp_states <- left_join(temp_states, states_pops, by = c("State" = "State", "year" = "year"))
head(temp_states)
temp_states <- left_join(temp_states, states_pops, by = c("State" = "State", "year" = "year", "population" = "population"))
head(temp_states)
head(statePop)
# information about dataset
summary(statePop)
statePop <- statePop %>%
mutate (
Y2010 = parse_number(Y2010),
Y2011 = parse_number(Y2011),
Y2012 = parse_number(Y2012),
Y2013 = parse_number(Y2013),
Y2014 = parse_number(Y2014),
Y2015 = parse_number(Y2015),
Y2016 = parse_number(Y2016),
Y2017 = parse_number(Y2017),
Y2018 = parse_number(Y2018),
Y2019 = parse_number(Y2019),
Y2020 = parse_number(Y2020),
Y2021 = parse_number(Y2021),
)
# information about dataset
summary(statePop)
head(temp_states)
statePop$State <- tolower(statePop$State)
head(statePop)
# information about dataset
summary(statePop)
# information about dataset
summary(statePop)
temp_states <- left_join(state_map, states_year, by = "State") # making df to plot
temp_states <- left_join(temp_states, states_pops, by = c("State" = "State", "year" = "year", "population" = "population"))
head(temp_states)
temp_states <- left_join(temp_states, states_pops, by = c("State" = "State", "year" = "year"))
head(temp_states)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
```{r, echo=FALSE, warnings=FALSE}
# Datasets being used
hw <- read.csv("hw_fatal.csv")
head(hw)
# information about data set
summary(hw)
statePop <- read.csv("state_populations_2010-2021.csv", col.names = c("State", "Y2010","Y2011","Y2012","Y2013","Y2014","Y2015","Y2016","Y2017","Y2018","Y2019","Y2020","Y2021"))
head(hw)
# information about dataset
summary(statePop)
# information about dataset
summary(statePop)
```{r, echo=FALSE, warnings=FALSE}
## Fixing empty column name for Fatality Type, and making year column names start with a character
hw <-  read.csv("hw_fatal.csv", col.names = c("State","FatalityType","Y2010","Y2011","Y2012","Y2013","Y2014","Y2015","Y2016","Y2017","Y2018","Y2019","Y2020","Y2021","TotalFatalities"))
## Creating a seocnd dataset where there the whole country collectively is not included (just states and territories individually)
states <- hw %>% filter(State != "United States")
states$State <- tolower(states$State) # making joining with the map easier later on
head(states)
## Parse the fatality by year as a number, and not a character.
states <- states %>%
mutate (
Y2010 = parse_number(Y2010),
Y2011 = parse_number(Y2011),
Y2012 = parse_number(Y2012),
Y2013 = parse_number(Y2013),
Y2014 = parse_number(Y2014),
Y2015 = parse_number(Y2015),
Y2016 = parse_number(Y2016),
Y2017 = parse_number(Y2017),
Y2018 = parse_number(Y2018),
Y2019 = parse_number(Y2019),
Y2020 = parse_number(Y2020),
Y2021 = parse_number(Y2021),
TotalFatalities = parse_number(TotalFatalities)
)
# information about data set
summary(states)
# information about data set
summary(states)
#### Plan of Data Exploration
Break down each fatality type and plot the data by state, observe similarities and differences between the states for each fatality type.
### Data Exploration
```{r, echo=FALSE, warnings=FALSE}
# Initializing stuff
state_map <- map_data("state")
colnames(state_map)[5] <- "State"   # making join easier
states_year <- states %>%        # Organizing by year and the count a numeric to plot
pivot_longer(cols = Y2010:Y2021,
names_to = "year",
values_to = "count") %>%
mutate(`count` = as.numeric(`count`))
states_pops <- statePop %>%        # Organizing by year and the count a numeric to plot
pivot_longer(cols = Y2010:Y2021,
names_to = "year",
values_to = "population") %>%
mutate(`population` = as.numeric(`population`))
states_pops$State <- tolower(states_pops$State)
temp_states_old <- left_join(state_map, states_year, by = "State") # making df to plot
temp_states
temp_states_old
temp_states_old <- left_join(state_map, states_year, by = "State") # making df to plot
temp_states_old
temp_states <- left_join(temp_states_old, states_pops, by = c("State", "year"))
temp_states
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
hw_travel <- read.csv("vehicles_traveled_licensed_drivers_2010_2021.csv", col.names = c("State", "Type", "Year", "Count"))
head(hw_travel)
# information about dataset
summary(hw_travel)
head(hw_travel)
hw_travel %>%
filter(Type == "Highway vehicle-miles traveled (millions)") %>%
ggplot(aes(x = year, y = count)) +
geom_col() +
ggtitle("Highway vehicle-miles traveled (millions)")
hw_travel %>%
filter(Type == "Highway vehicle-miles traveled (millions)") %>%
ggplot(aes(x = Year, y = Count)) +
geom_col() +
ggtitle("Highway vehicle-miles traveled (millions)")
hw_travel %>%
filter(Type == "Highway vehicle-miles traveled (millions)") %>%
ggplot(aes(x = Year, y = Count)) +
geom_col() +
ggtitle("Highway vehicle-miles traveled (millions) by Year")
hw_travel %>%
filter(FatalityType == "Highway vehicle-miles traveled (millions)") %>%
mutate(count = Count, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group=group, fill = count)) +
scale_fill_continuous(name = "Death Count (2010 - 2021)") +
ggtitle("Highway vehicle-miles traveled (millions) by Year by State (2010-2021)")
hw_travel %>%
filter(Type == "Highway vehicle-miles traveled (millions)") %>%
mutate(count = Count, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group=group, fill = count)) +
scale_fill_continuous(name = "Death Count (2010 - 2021)") +
ggtitle("Highway vehicle-miles traveled (millions) by Year by State (2010-2021)")
hw_travel %>%
filter(Type == "Highway vehicle-miles traveled (millions)") %>%
mutate(count = Count, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(fill = count)) +
scale_fill_continuous(name = "Death Count (2010 - 2021)") +
ggtitle("Highway vehicle-miles traveled (millions) by Year by State (2010-2021)")
hw_travel %>%
filter(Type == "Highway vehicle-miles traveled (millions)") %>%
mutate(count = Count, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group=count, fill = count)) +
scale_fill_continuous(name = "Death Count (2010 - 2021)") +
ggtitle("Highway vehicle-miles traveled (millions) by Year by State (2010-2021)")
hw_travel %>%
filter(Type == "Highway vehicle-miles traveled (millions)") %>%
mutate(count = Count, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group=year, fill = count)) +
scale_fill_continuous(name = "Death Count (2010 - 2021)") +
ggtitle("Highway vehicle-miles traveled (millions) by Year by State (2010-2021)")
hw_travel %>%
filter(Type == "Highway vehicle-miles traveled (millions)") %>%
mutate(count = Count, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group=group, fill = count)) +
scale_fill_continuous(name = "Death Count (2010 - 2021)") +
ggtitle("Highway vehicle-miles traveled (millions) by Year by State (2010-2021)")
hw_travel %>%
filter(Type == "Highway vehicle-miles traveled (millions)") %>%
mutate(count = Count, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_line() +
scale_fill_continuous(name = "Death Count (2010 - 2021)") +
ggtitle("Highway vehicle-miles traveled (millions) by Year by State (2010-2021)")
hw_travel %>%
filter(Type == "Highway vehicle-miles traveled (millions)") %>%
mutate(count = Count, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group=group, fill = count)) +
scale_fill_continuous(name = "Death Count (2010 - 2021)") +
ggtitle("Highway vehicle-miles traveled (millions) by Year by State (2010-2021)")
hw_travel %>%
filter(Type == "Highway vehicle-miles traveled (millions)") %>%
mutate(count = Count, .by = State) %>%
ggplot(aes(x = Count, y = State)) +
geom_polygon(aes(group=group, fill = count)) +
scale_fill_continuous(name = "Death Count (2010 - 2021)") +
ggtitle("Highway vehicle-miles traveled (millions) by Year by State (2010-2021)")
hw_travel %>%
filter(Type == "Highway vehicle-miles traveled (millions)") %>%
mutate(count = Count, .by = State) %>%
ggplot(aes(x = Count, y = State)) +
geom_polygon(aes(fill = count)) +
scale_fill_continuous(name = "Death Count (2010 - 2021)") +
ggtitle("Highway vehicle-miles traveled (millions) by Year by State (2010-2021)")
hw_travel %>%
filter(Type == "Highway vehicle-miles traveled (millions)") %>%
mutate(count = Count, .by = State) %>%
ggplot(aes(x = Count, y = State)) +
geom_point() +
scale_fill_continuous(name = "Death Count (2010 - 2021)") +
ggtitle("Highway vehicle-miles traveled (millions) by Year by State (2010-2021)")
hw_travel %>%
filter(Type == "Highway vehicle-miles traveled (millions)") %>%
mutate(count = Count, .by = State) %>%
ggplot(aes(x = Count, y = State)) +
geom_bar() +
scale_fill_continuous(name = "Death Count (2010 - 2021)") +
ggtitle("Highway vehicle-miles traveled (millions) by Year by State (2010-2021)")
hw_travel %>%
filter(Type == "Highway vehicle-miles traveled (millions)") %>%
mutate(count = Count, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group=group, fill = count)) +
scale_fill_continuous(name = "Death Count (2010 - 2021)") +
ggtitle("Highway vehicle-miles traveled (millions) by Year by State (2010-2021)")
# Pedestrian Fatalities by Year
states_year %>%
filter(FatalityType == "Pedestrian Fatalities") %>%
ggplot(aes(x = year, y = count, fill = State)) +
geom_col() +
ggtitle("Pedestrian Fatalities by Year") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# Pedestrian Fatalities by Year
states_year %>%
filter(FatalityType == "Pedestrian Fatalities") %>%
ggplot(aes(x = year, y = count, fill = State)) +
geom_col() +
ggtitle("Pedestrian Fatalities by Year") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
hw_travel %>%
filter(Type == "Highway vehicle-miles traveled (millions)") %>%
ggplot(aes(x = Year, y = Count, fill = State)) +
geom_col() +
ggtitle("Highway vehicle-miles traveled (millions) by Year") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
options(repr.plot.width = 5, repr.plot.height =2)
hw_travel %>%
filter(Type == "Highway vehicle-miles traveled (millions)") %>%
ggplot(aes(x = Year, y = Count, fill = State)) +
geom_col() +
ggtitle("Highway vehicle-miles traveled (millions) by Year") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
options(repr.plot.width = 5, repr.plot.height =2)
hw_travel %>%
filter(Type == "Highway vehicle-miles traveled (millions)") %>%
ggplot(aes(x = Year, y = Count, fill = State)) +
geom_col() +
ggtitle("Highway vehicle-miles traveled (millions) by Year") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
hw_travel %>%
filter(Type == "Highway vehicle-miles traveled (millions)") %>%
ggplot(aes(x = Year, y = Count, fill = State)) +
geom_col() +
ggtitle("Highway vehicle-miles traveled (millions) by Year") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
options(repr.plot.width = 5, repr.plot.height =2)
hw_travel %>%
filter(Type == "Highway vehicle-miles traveled (millions)") %>%
ggplot(aes(x = Year, y = Count, fill = State)) +
geom_col() +
ggtitle("Highway vehicle-miles traveled (millions) by Year") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
options(repr.plot.width = 5, repr.plot.height =2)
options(repr.plot.width = 5, repr.plot.height =2)
options(repr.plot.width = 5, repr.plot.height =2)
hw_travel %>%
filter(Type == "Highway vehicle-miles traveled (millions)") %>%
ggplot(aes(x = Year, y = Count, fill = State)) +
geom_col() +
ggtitle("Highway vehicle-miles traveled (millions) by Year") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
options(repr.plot.width = 10, repr.plot.height =2)
hw_travel %>%
filter(Type == "Highway vehicle-miles traveled (millions)") %>%
ggplot(aes(x = Year, y = Count, fill = State)) +
geom_col() +
ggtitle("Highway vehicle-miles traveled (millions) by Year") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
options(repr.plot.width = 40, repr.plot.height =2)
hw_travel %>%
filter(Type == "Highway vehicle-miles traveled (millions)") %>%
ggplot(aes(x = Year, y = Count, fill = State)) +
geom_col() +
ggtitle("Highway vehicle-miles traveled (millions) by Year") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
hw_travel %>%
filter(Type == "Highway vehicle-miles traveled (millions)") %>%
ggplot(aes(x = Year, y = Count, fill = State)) +
geom_col() +
ggtitle("Highway vehicle-miles traveled (millions) by Year") +
theme(axis.text.x = element_text(angle = 90, vjust = 1.5, hjust=1))
hw_travel %>%
filter(Type == "Highway vehicle-miles traveled (millions)") %>%
ggplot(aes(x = Year, y = Count, fill = State)) +
geom_col() +
ggtitle("Highway vehicle-miles traveled (millions) by Year") +
theme(axis.text.x = element_text(angle = 90, vjust = 11.5, hjust=1))
hw_travel %>%
filter(Type == "Highway vehicle-miles traveled (millions)") %>%
ggplot(aes(x = Year, y = Count, fill = State)) +
geom_col() +
ggtitle("Highway vehicle-miles traveled (millions) by Year") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
hw_travel %>%
filter(Type == "Highway vehicle-miles traveled (millions)") %>%
ggplot(aes(x = Year, y = Count, fill = State)) +
geom_col() +
ggtitle("Highway vehicle-miles traveled (millions) by Year") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=2))
hw_travel %>%
filter(Type == "Highway vehicle-miles traveled (millions)") %>%
ggplot(aes(x = Year, y = Count, fill = State)) +
geom_col() +
ggtitle("Highway vehicle-miles traveled (millions) by Year") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=20))
hw_travel %>%
filter(Type == "Highway vehicle-miles traveled (millions)") %>%
ggplot(aes(x = Year, y = Count, fill = State)) +
geom_col() +
ggtitle("Highway vehicle-miles traveled (millions) by Year") +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
90
hw_travel %>%
filter(Type == "Highway vehicle-miles traveled (millions)") %>%
ggplot(aes(x = Year, y = Count, fill = State)) +
geom_col() +
ggtitle("Highway vehicle-miles traveled (millions) by Year") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
hw_travel %>%
filter(Type == "Licensed drivers") %>%
ggplot(aes(x = Year, y = Count)) +
geom_col() +
ggtitle("Licensed drivers by Year")
hw_travel %>%
filter(Type == "Licensed drivers") %>%
ggplot(aes(x = Year, y = Count, fill = State)) +
geom_col() +
ggtitle("Licensed drivers by Year") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
hw_travel %>%
filter(Type == "Highway vehicle-miles traveled (millions)") %>%
ggplot(aes(x = Year, y = Count, fill = State)) +
geom_col() +
ggtitle("Highway vehicle-miles traveled (millions) by Year") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
hw_travel %>%
filter(Type == "Licensed drivers") %>%
ggplot(aes(x = Year, y = Count, fill = State)) +
geom_col() +
ggtitle("Licensed drivers by Year") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
