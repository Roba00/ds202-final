head(temp_states)
temp_states <- left_join(temp_states, states_pops, by = c("State" = "State", "year" = "year"))
head(temp_states)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
```{r, echo=FALSE, warnings=FALSE}
# Datasets being used
hw <- read.csv("hw_fatal.csv")
head(hw)
# information about data set
summary(hw)
statePop <- read.csv("state_populations_2010-2021.csv", col.names = c("State", "Y2010","Y2011","Y2012","Y2013","Y2014","Y2015","Y2016","Y2017","Y2018","Y2019","Y2020","Y2021"))
head(hw)
# information about dataset
summary(statePop)
# information about dataset
summary(statePop)
```{r, echo=FALSE, warnings=FALSE}
## Fixing empty column name for Fatality Type, and making year column names start with a character
hw <-  read.csv("hw_fatal.csv", col.names = c("State","FatalityType","Y2010","Y2011","Y2012","Y2013","Y2014","Y2015","Y2016","Y2017","Y2018","Y2019","Y2020","Y2021","TotalFatalities"))
## Creating a seocnd dataset where there the whole country collectively is not included (just states and territories individually)
states <- hw %>% filter(State != "United States")
states$State <- tolower(states$State) # making joining with the map easier later on
head(states)
## Parse the fatality by year as a number, and not a character.
states <- states %>%
mutate (
Y2010 = parse_number(Y2010),
Y2011 = parse_number(Y2011),
Y2012 = parse_number(Y2012),
Y2013 = parse_number(Y2013),
Y2014 = parse_number(Y2014),
Y2015 = parse_number(Y2015),
Y2016 = parse_number(Y2016),
Y2017 = parse_number(Y2017),
Y2018 = parse_number(Y2018),
Y2019 = parse_number(Y2019),
Y2020 = parse_number(Y2020),
Y2021 = parse_number(Y2021),
TotalFatalities = parse_number(TotalFatalities)
)
# information about data set
summary(states)
# information about data set
summary(states)
#### Plan of Data Exploration
Break down each fatality type and plot the data by state, observe similarities and differences between the states for each fatality type.
### Data Exploration
```{r, echo=FALSE, warnings=FALSE}
# Initializing stuff
state_map <- map_data("state")
colnames(state_map)[5] <- "State"   # making join easier
states_year <- states %>%        # Organizing by year and the count a numeric to plot
pivot_longer(cols = Y2010:Y2021,
names_to = "year",
values_to = "count") %>%
mutate(`count` = as.numeric(`count`))
states_pops <- statePop %>%        # Organizing by year and the count a numeric to plot
pivot_longer(cols = Y2010:Y2021,
names_to = "year",
values_to = "population") %>%
mutate(`population` = as.numeric(`population`))
states_pops$State <- tolower(states_pops$State)
temp_states_old <- left_join(state_map, states_year, by = "State") # making df to plot
temp_states
temp_states_old
temp_states_old <- left_join(state_map, states_year, by = "State") # making df to plot
temp_states_old
temp_states <- left_join(temp_states_old, states_pops, by = c("State", "year"))
temp_states
git pull
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
# Datasets being used
hw <- read.csv("hw_fatal.csv")
head(hw)
# information about data set
summary(hw)
statePop <- read.csv("state_populations_2010-2021.csv", col.names = c("State", "Y2010","Y2011","Y2012","Y2013","Y2014","Y2015","Y2016","Y2017","Y2018","Y2019","Y2020","Y2021"))
head(statePop)
# information about dataset
summary(statePop)
hw_travel <- read.csv("vehicles_traveled_licensed_drivers_2010_2021.csv", col.names = c("State", "Type", "Year", "Count"))
head(hw_travel)
# information about dataset
summary(hw_travel)
# Cleaning data
## Fixing empty column name for Fatality Type, and making year column names start with a character
hw <-  read.csv("hw_fatal.csv", col.names = c("State","FatalityType","Y2010","Y2011","Y2012","Y2013","Y2014","Y2015","Y2016","Y2017","Y2018","Y2019","Y2020","Y2021","TotalFatalities"))
## Creating a seocnd dataset where there the whole country collectively is not included (just states and territories individually)
states <- hw %>% filter(State != "United States")
states$State <- tolower(states$State) # making joining with the map easier later on
head(states)
## Parse the fatality by year as a number, and not a character.
states <- states %>%
mutate (
Y2010 = parse_number(Y2010),
Y2011 = parse_number(Y2011),
Y2012 = parse_number(Y2012),
Y2013 = parse_number(Y2013),
Y2014 = parse_number(Y2014),
Y2015 = parse_number(Y2015),
Y2016 = parse_number(Y2016),
Y2017 = parse_number(Y2017),
Y2018 = parse_number(Y2018),
Y2019 = parse_number(Y2019),
Y2020 = parse_number(Y2020),
Y2021 = parse_number(Y2021),
TotalFatalities = parse_number(TotalFatalities)
)
# information about data set
summary(states)
# Aadhi
# Initializing maps
state_map <- map_data("state")
colnames(state_map)[5] <- "State"   # making join easier
states_year <- states %>%        # Organizing by year and the count a numeric to plot
pivot_longer(cols = Y2010:Y2021,
names_to = "year",
values_to = "count") %>%
mutate(`count` = as.numeric(`count`))
states_pops <- statePop %>%        # Organizing by year and the count a numeric to plot
pivot_longer(cols = Y2010:Y2021,
names_to = "year",
values_to = "population") %>%
mutate(`population` = as.numeric(`population`))
states_pops$State <- tolower(states_pops$State)
temp_states_old <- left_join(state_map, states_year, by = "State") # making df to plot
temp_states <- left_join(temp_states_old, states_pops, by = c("State", "year"))
# Roba
## Construct map of fatalality by year
state_map_year <- states %>%
pivot_longer(cols = Y2010:Y2021,
names_to = "year",
values_to = "count") %>%
mutate(`count` = as.numeric(`count`))
## Construct map of fatalality by state (Roba)
states$region <- tolower(states$State)
state_map2 <- map_data("state")
state_map2 <- states %>% left_join(state_map2, by="region")
head(state_map2)
# Overall highway fatalities by year and state
temp_states %>%
filter(FatalityType == "Highway Fatalities") %>%
mutate(total_pop = sum(population), .by = State) %>%
mutate(total_fatalities = TotalFatalities, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities / total_pop)) +
ggtitle("Highway Fatalities by State per Capita")
state_map2 %>% filter(FatalityType == "Highway Fatalities") %>%
mutate(total_fatalities = TotalFatalities, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group=group, fill = total_fatalities)) +
scale_fill_continuous(name = "Death Count (2010 - 2021)") +
ggtitle("Highway Fatalities by State (2010-2021)")
states_year %>%
filter(FatalityType == "Highway Fatalities") %>%
ggplot(aes(x = year, y = count, fill = State)) +
geom_col(space=1) +
ggtitle("Highway Fatalities by Year by State") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
state_map_year %>%
filter(FatalityType == "Highway Fatalities") %>%
ggplot(aes(x = year, y = count)) +
geom_col() +
ggtitle("Highway Fatality Totals by Year")
# Show the number of combined highway vehicle miles traveled each year (2010-2021)
hw_travel %>%
filter(Type == "Highway vehicle-miles traveled (millions)") %>%
ggplot(aes(x = Year, y = Count, fill = State)) +
geom_col() +
ggtitle("Highway vehicle-miles traveled (millions) by Year") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# Show the number of total licensed drivers in the US by year
hw_travel %>%
filter(Type == "Licensed drivers") %>%
ggplot(aes(x = Year, y = Count, fill = State)) +
geom_col() +
ggtitle("Licensed drivers by Year") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# Aadhi
# Pedestrian Fatalities by Year
states_year %>%
filter(FatalityType == "Pedestrian Fatalities") %>%
ggplot(aes(x = year, y = count, fill = State)) +
geom_col() +
ggtitle("Pedestrian Fatalities by Year") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# Pedestrian Fatalities by State
temp_states %>%
filter(FatalityType == "Pedestrian Fatalities") %>%
mutate(total_pop = sum(population), .by = State) %>%
mutate(total_fatalities = TotalFatalities, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities / total_pop)) +
ggtitle("Pedestrian Fatalities by State")
# Pedestrian Fatalities by State per capita
temp_states %>%
filter(FatalityType == "Pedestrian Fatalities") %>%
mutate(total_fatalities = TotalFatalities, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities)) +
ggtitle("Pedestrian Fatalities by State")
# Other Nonoccupant Fatalities by Year
states_year %>%
filter(FatalityType == "Other Nonoccupant Fatalities") %>%
ggplot(aes(x = year, y = count, fill = State)) +
geom_col() +
ggtitle("Other Nonoccupant Fatalities by Year") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# Other Nonoccupant Fatalities by State
temp_states %>%
filter(FatalityType == "Other Nonoccupant Fatalities") %>%
mutate(total_pop = sum(population), .by = State) %>%
mutate(total_fatalities = TotalFatalities, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities / total_pop)) +
ggtitle("Other Nonoccupant Fatalities by State")
temp_states %>%
filter(FatalityType == "Other Nonoccupant Fatalities") %>%
mutate(total_fatalities = TotalFatalities, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities)) +
ggtitle("Other Nonoccupant Fatalities by State")
# Other Vehicle Fatalities by Year
states_year %>%
filter(FatalityType == "Other Vehicle Fatalities") %>%
ggplot(aes(x = year, y = count, fill = State)) +
geom_col() +
ggtitle("Other Vehicle Fatalities by Year") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# Other Vehicle Fatalities by State
temp_states %>%
filter(FatalityType == "Other Vehicle Fatalities") %>%
mutate(total_pop = sum(population), .by = State) %>%
mutate(total_fatalities = TotalFatalities, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities / total_pop)) +
ggtitle("Other Vehicle Fatalities by State")
temp_states %>%
filter(FatalityType == "Other Vehicle Fatalities") %>%
mutate(total_fatalities = TotalFatalities, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities)) +
ggtitle("Other Vehicle Fatalities by State")
# Conor
# Pickup Truck Fatalities by Year (Conor)
states_year %>%
filter(FatalityType == "Pickup Truck Fatalities") %>%
ggplot(aes(x = year, y = count)) +
geom_col() +
ggtitle("Pickup Truck Fatalities by Year") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# Pickup Truck Fatalities by State (Conor)
temp_states %>%
filter(FatalityType == "Pickup Truck Fatalities") %>%
mutate(total_pop = sum(population), .by = State) %>%
mutate(total_fatalities = TotalFatalities, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities / total_pop)) +
ggtitle("Pickup Truck Fatalities by State")
temp_states %>%
filter(FatalityType == "Pickup Truck Fatalities") %>%
mutate(total_fatalities = TotalFatalities, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities)) +
ggtitle("Pickup Truck Fatalities by State")
# Van Fatalities by Year (Conor)
states_year %>%
filter(FatalityType == "Van Fatalities") %>%
ggplot(aes(x = year, y = count)) +
geom_col() +
ggtitle("Van Fatalities by Year") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# Van Fatalities by State (Conor)
temp_states %>%
filter(FatalityType == "Van Fatalities") %>%
mutate(total_pop = sum(population), .by = State) %>%
mutate(total_fatalities = TotalFatalities, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities / total_pop)) +
ggtitle("Van Fatalities by State")
temp_states %>%
filter(FatalityType == "Van Fatalities") %>%
mutate(total_fatalities = TotalFatalities, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities)) +
ggtitle("Van Fatalities by State")
# Other Light Truck Fatalities by Year (Conor)
states_year %>%
filter(FatalityType == "Other Light Truck Fatalities") %>%
ggplot(aes(x = year, y = count)) +
geom_col() +
ggtitle("Other Light Truck Fatalities by Year") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# Other Light Truck Fatalities by State (Conor)
temp_states %>%
filter(FatalityType == "Other Light Truck Fatalities") %>%
mutate(total_pop = sum(population), .by = State) %>%
mutate(total_fatalities = TotalFatalities, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities / total_pop)) +
ggtitle("Other Light Truck Fatalities by State")
temp_states %>%
filter(FatalityType == "Other Light Truck Fatalities") %>%
mutate(total_fatalities = TotalFatalities, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities)) +
ggtitle("Other Light Truck Fatalities by State")
# Motorcycle Fatalities by Year (Conor)
states_year %>%
filter(FatalityType == "Motorcycle Fatalities") %>%
ggplot(aes(x = year, y = count)) +
geom_col() +
ggtitle("Motorcycle Fatalities by Year") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# Motorcycle Fatalities by State (Conor)
temp_states %>%
filter(FatalityType == "Motorcycle Fatalities") %>%
mutate(total_pop = sum(population), .by = State) %>%
mutate(total_fatalities = TotalFatalities, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities / total_pop)) +
ggtitle("Motorcycle Fatalities by State")
temp_states %>%
filter(FatalityType == "Motorcycle Fatalities") %>%
mutate(total_fatalities = TotalFatalities, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities)) +
ggtitle("Motorcycle Fatalities by State")
# Daniel
# Bus Fatalities by year per state
states_year %>%
filter(FatalityType == "Bus Fatalities") %>%
ggplot(aes(x = year, y = count, fill = State)) +
geom_col(space=1) +
ggtitle("Bus Fatalities by Year") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
temp_states %>%
filter(FatalityType == "Bus Fatalities") %>%
mutate(total_pop = sum(population), .by = State) %>%
mutate(total_fatalities = TotalFatalities, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities / total_pop)) +
ggtitle("Bus Fatalities by State")
temp_states %>%
filter(FatalityType == "Bus Fatalities") %>%
mutate(total_fatalities = TotalFatalities, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities)) +
ggtitle("Bus Fatalities by State")
# Large Truck Fatalities by year per state
states_year %>%
filter(FatalityType == "Large Truck Fatalities") %>%
ggplot(aes(x = year, y = count, fill = State)) +
geom_col(space=1) +
ggtitle("Large Truck Fatalities by Year") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
temp_states %>%
filter(FatalityType == "Large Truck Fatalities") %>%
mutate(total_pop = sum(population), .by = State) %>%
mutate(total_fatalities = TotalFatalities, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities / total_pop)) +
ggtitle("Large Truck Fatalities by State")
temp_states %>%
filter(FatalityType == "Large Truck Fatalities") %>%
mutate(total_fatalities = TotalFatalities, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities)) +
ggtitle("Large Truck Fatalities by State")
# Pedalcyclist Fatalities by year per state
states_year %>%
filter(FatalityType == "Pedalcyclist Fatalities") %>%
ggplot(aes(x = year, y = count, fill = State)) +
geom_col(space=1) +
ggtitle("Pedalcyclist Fatalities by Year") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
temp_states %>%
filter(FatalityType == "Pedalcyclist Fatalities") %>%
mutate(total_pop = sum(population), .by = State) %>%
mutate(total_fatalities = TotalFatalities, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities / total_pop)) +
ggtitle("Pedalcyclist Fatalities by State per Capita")
temp_states %>%
filter(FatalityType == "Pedalcyclist Fatalities") %>%
mutate(total_fatalities = TotalFatalities, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities)) +
ggtitle("Pedalcyclist Fatalities by State")
# Roba
temp_states %>%
filter(FatalityType == "Passenger Car Fatalities") %>%
mutate(total_pop = sum(population), .by = State) %>%
mutate(total_fatalities = TotalFatalities, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities / total_pop)) +
ggtitle("Passenger Car Fatalities by State per Capita")
state_map2 %>% filter(FatalityType == "Passenger Car Fatalities") %>%
mutate(total_fatalities = TotalFatalities, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group=group, fill = total_fatalities)) +
scale_fill_continuous(name = "Death Count (2010 - 2021)") +
ggtitle("Passenger Car Fatalities by State")
temp_states %>%
filter(FatalityType == "SUV Fatalities") %>%
mutate(total_pop = sum(population), .by = State) %>%
mutate(total_fatalities = TotalFatalities, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = total_fatalities / total_pop)) +
ggtitle("SUV Fatalities by State per Capita")
state_map2 %>% filter(FatalityType == "SUV Fatalities") %>%
mutate(total_fatalities = TotalFatalities, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group=group, fill = total_fatalities)) +
scale_fill_continuous(name = "Death Count (2010 - 2021)") +
ggtitle("SUV Fatalities by State")
state_map_year %>%
filter(FatalityType == "Passenger Car Fatalities") %>%
ggplot(aes(x = year, y = count)) +
geom_col() +
ggtitle("Passenger Car Fatalities by Year")
state_map_year %>%
filter(FatalityType == "SUV Fatalities") %>%
ggplot(aes(x = year, y = count)) +
geom_col() +
ggtitle("SUV Fatalities by Year")
state_map2 %>% filter(FatalityType == "Other Nonoccupant Fatalities") %>%
mutate(total_fatalities = TotalFatalities, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group=group, fill = total_fatalities)) +
scale_fill_continuous(name = "Death Count (2010 - 2021)") +
ggtitle("Other Nonoccupant Fatalities by State")
financials2019_old1 <- read.csv("ASFIN_FY2019.csv")
head(financials2019_old1)
financials2019_old2 <- financials2019_old1 %>%        # Organizing by year and the count a numeric to plot
pivot_longer(cols = !RevenueType,
names_to = "State",
values_to = "Amount (Per 1000)") %>%
mutate(`Amount (Per 1000)` = parse_number(`Amount (Per 1000)`))
financials2019 <- financials2019_old2
financials2019$State <- tolower(financials2019_old2$State)
financials2019$State <- gsub(".", " ", financials2019$State, fixed=TRUE)
head(financials2019)
fat_states_pops_2019 <- temp_states %>% filter(year == "Y2019")
head(fat_states_pops_2019)
fat_states_pops_fin_2019 <- left_join(fat_states_pops_2019, financials2019, by = "State")
head(fat_states_pops_fin_2019)
highwayFats_states_pops_revenue_2019 <-
fat_states_pops_fin_2019 %>%
filter(RevenueType == "Total revenue", FatalityType == "Highway Fatalities") %>%
select(group, long, lat, State, FatalityType, TotalFatalities, `Amount (Per 1000)`, population) %>%
distinct()
highwayFats_states_pops_revenue_2019 %>%
mutate(revenue = `Amount (Per 1000)`, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group=group, fill = revenue / population)) +
scale_fill_continuous(name = "Total State Revenue ($1000/Capita)") +
ggtitle("State Total Revenue (2019)")
highwayFats_states_pops_revenue_2019 %>% ggplot(aes(x=`Amount (Per 1000)`/population, y=`TotalFatalities`/population)) +
geom_point() +
geom_smooth(method=lm, se=FALSE) +
ggtitle("State Revenue's Effect on Traffic Fatalities (2019)") +
xlab("Total State Revenue ($1000/Per Capita)") + ylab("Total Traffic Fatalities Per Capita")
highwayFats_states_pops_revenue_2019 <-
fat_states_pops_fin_2019 %>%
filter(RevenueType == "Police protection", FatalityType == "Highway Fatalities") %>%
select(group, long, lat, State, FatalityType, TotalFatalities, `Amount (Per 1000)`, population) %>%
distinct()
highwayFats_states_pops_revenue_2019 %>% ggplot(aes(x=`Amount (Per 1000)`/population, y=`TotalFatalities`/population)) +
geom_point() +
geom_smooth(method=lm, se=FALSE) +
ggtitle("State Police Funding's Effect on Traffic Fatalities (2019)") +
xlab("Police Funding ($1000/Per Capita)") + ylab("Total Traffic Fatalities Per Capita")
highwayFats_states_pops_revenue_2019 <-
fat_states_pops_fin_2019 %>%
filter(RevenueType == "Total expenditure", FatalityType == "Highway Fatalities") %>%
select(group, long, lat, State, FatalityType, TotalFatalities, `Amount (Per 1000)`, population) %>%
distinct()
highwayFats_states_pops_revenue_2019 %>%
mutate(revenue = `Amount (Per 1000)`, .by = State) %>%
ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group=group, fill = revenue / population)) +
scale_fill_continuous(name = "Total State Expenditure ($1000/Capita)") +
ggtitle("State Expenditure's (2019)")
highwayFats_states_pops_revenue_2019 %>% ggplot(aes(x=`Amount (Per 1000)`/population, y=`TotalFatalities`/population)) +
geom_point() +
geom_smooth(method=lm, se=FALSE)  +
ggtitle("State Expenditure's Effect on Traffic Fatalities (2019)") +
xlab("Total Expenditure ($1000/Per Capita)") + ylab("Total Traffic Fatalities Per Capita")
highwayFats_states_pops_revenue_2019 <-
fat_states_pops_fin_2019 %>%
filter(RevenueType == "Education", FatalityType == "Highway Fatalities") %>%
select(group, long, lat, State, FatalityType, TotalFatalities, `Amount (Per 1000)`, population) %>%
distinct()
highwayFats_states_pops_revenue_2019 %>% ggplot(aes(x=`Amount (Per 1000)`/population, y=`TotalFatalities`/population)) +
geom_point() +
geom_smooth(method=lm, se=FALSE)  +
ggtitle("State Education Funding's Effect on Traffic Fatalities (2019)") +
xlab("Education Funding ($1000/Per Capita)") + ylab("Total Traffic Fatalities Per Capita")
